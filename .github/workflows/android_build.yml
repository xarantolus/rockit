name: Build for Android

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      
      - uses: subosito/flutter-action@v1
          
      - run: flutter pub get
      
      - run: flutter test

      - name: Extract env variables
        run: |
            sudo wget -q "https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64" -O "/usr/bin/yq"
            sudo chmod +x /usr/bin/yq

            echo "APP_VERSION=$(yq eval .version pubspec.yaml | cut -d+ -f1)" >> $GITHUB_ENV
            echo "COMMIT_MESSAGE=$(git log -n 1 --oneline | cut -d' ' -f2- -)" >> $GITHUB_ENV
            echo "CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV

      - name: Set up signing config
        run: |
          echo "${{ secrets.SIGNING_KEYSTORE_CONTENT }}" | base64 -d - > upload-keystore.jks
          export X_KEYSTORE_PATH="$(pwd)/upload-keystore.jks"
          echo "X_KEYSTORE_PATH=$X_KEYSTORE_PATH" >> $GITHUB_ENV

          echo "${{ secrets.SIGNING_PROPERTIES_CONTENT }}" > android/key.properties

      - run: flutter build apk --release
        env:
          X_KEYSTORE_PATH: ${{ env.X_KEYSTORE_PATH }}

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/app/outputs/flutter-apk/*-release.apk
          tag_name: v${{ env.APP_VERSION }}
          name: ${{ env.COMMIT_MESSAGE }}
          fail_on_unmatched_files: true
          draft: true 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ env.CURRENT_BRANCH == 'main' && (startsWith(env.COMMIT_MESSAGE, '[Release]') || startsWith(env.COMMIT_MESSAGE, 'Release')) }}
